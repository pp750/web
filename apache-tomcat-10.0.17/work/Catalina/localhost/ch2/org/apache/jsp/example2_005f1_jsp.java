/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.17
 * Generated at: 2022-03-07 04:47:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.time.LocalTime;

public final class example2_005f1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 public int continueSum(int start, int end){	//定义方法
		int sum=0;
		for(int i=start;i<=end;i++)
			sum=sum+i;
		return sum;
	}

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.time.LocalTime");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("	<!--jsp指令标记-->\r\n");
      out.write("		<!--jsp指令标记-->\r\n");
      out.write("	<!--jsp指令标记-->\r\n");
      out.write("\r\n");
      out.write("<HTML><body bgcolor=pink>\r\n");
      out.write("<script>	<!--JavaScript(JS)标记-->\r\n");
      out.write("var userTime=new Date();\r\n");
      out.write("var hour=userTime.getHours();\r\n");
      out.write("var minute=userTime.getMinutes();\r\n");
      out.write("var second=userTime.getSeconds();\r\n");
      out.write("var millisecond=userTime.getMilliseconds();\r\n");
      out.write("document.write(\"<h2>浏览器时间：\"+hour+\":\"+minute+\":\"+second+\":\"+millisecond+\"<br></h2>\");\r\n");
      out.write("</script>\r\n");
      out.write("<img src=\"image/time.png\" width=180 height=120/><!--html标记-->\r\n");
      out.write("<p stype=\"font-family:黑体;front-size:36;color:red\"><!--html标记-->\r\n");
 //Java程序片
	LocalTime timeServer=LocalTime.now();
	int hour=timeServer.getHour();
	int minute=timeServer.getMinute();
	int second=timeServer.getSecond();
	int nano=timeServer.getNano();
	int millisecond=nano/1000000;
	out.print("服务器时间：<br>"+hour+":"+second+":"+millisecond);
	int start=1;
	int end=100;
	int sum=continueSum(start,end);

      out.write("\r\n");
      out.write("</p>\r\n");
      out.write("<p style=\"font-family:宋体;font-size:33;color:blue\">\r\n");
      out.write("	从\r\n");
      out.write("	");
      out.print(start);
      out.write("	<!--Java表达式-->\r\n");
      out.write("	至\r\n");
      out.write("	");
      out.print(end);
      out.write("\r\n");
      out.write("	的<br>连续和是:\r\n");
      out.write("	");
      out.print(sum);
      out.write("\r\n");
      out.write("</p>\r\n");
      out.write("<script>	<!--JavaScript(JS)标记-->\r\n");
      out.write("document.write(\"<h2>服务器时间：\"+");
      out.print(hour);
      out.write("+\":\"+");
      out.print(minute);
      out.write("+\":\"+");
      out.print(second);
      out.write("+\":\"+");
      out.print(millisecond);
      out.write("+\"</h2>\");\r\n");
      out.write("</script>\r\n");
      out.write("</body></HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
